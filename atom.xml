<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MLi&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mdeng1985.github.io/"/>
  <updated>2017-01-25T05:35:12.366Z</updated>
  <id>http://mdeng1985.github.io/</id>
  
  <author>
    <name>Matthew Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>coding.me + github.io + 域名解析</title>
    <link href="http://mdeng1985.github.io/2017/01/24/domian-analytical/"/>
    <id>http://mdeng1985.github.io/2017/01/24/domian-analytical/</id>
    <published>2017-01-25T05:09:13.000Z</published>
    <updated>2017-01-25T05:35:12.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>这篇文章的目的就是将coding.me上的和github.io的个人博客和自己注册的域名关联起来，并且实现国内的用户访问域名的时候定向到 coding.me，国际的用户访问的时候，定向到github.io。</p>
<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul>
<li>有自己的github.io博客，参考”<a href="/2017/01/23/installHexo/" title="用hexo创建博客并发布到github pages">用hexo创建博客并发布到github pages</a>“，假设为zs.github.io</li>
<li>有自己的coding.me博客，参考”<a href="/2017/01/23/hexo_coding_github/" title="利用hexo将博客同时推送到coding pages和github pages">利用hexo将博客同时推送到coding pages和github pages</a>“, 假设为zs.coding.me</li>
<li>注册了自己的域名，我用的是<a href="https://www.godaddy.com" target="_blank" rel="external">godaddy</a> 上注册的，假设为zs.com</li>
</ul>
<h1 id="域名解析的相关概念"><a href="#域名解析的相关概念" class="headerlink" title="域名解析的相关概念"></a>域名解析的相关概念</h1><p>域名解析的示意图如下图：</p>
<p><img src="/2017/01/24/domian-analytical/before_analy.png" alt=""></p>
<p>由图可见，在解析前github对应自己的ip,coding对应自己的ip，而且没有和自己的域名相互关联，两者是相互独立的。解析以后如下图</p>
<p><img src="/2017/01/24/domian-analytical/after_analy.png" alt=""></p>
<p>域名解析有两种方式：A记录和CNAME。A (Address) 记录是用来指定主机名（或域名）对应的IP地址记录。CNAME记录，即名记录。这种记录允许您将多个名字映射到另外一个域名。 由图可见，无论用户访问coding.io还是guihub.io，还是zs.com，都会定向到zs.com（这称为CNAME，相当于别名）； 然后zs.com会根据用户的ip来指向具体的ip，这称为A记录 （<strong>这是我自己的理解，不一定对</strong>）。</p>
<p>关于域名解析的概念性的文章，我推荐：<a href="http://quantumman.me/blog/setting-up-a-domain-with-gitHub-pages.html" target="_blank" rel="external">GitHub Pages 绑定来自阿里云的域名</a></p>
<h1 id="域名解析的具体步骤"><a href="#域名解析的具体步骤" class="headerlink" title="域名解析的具体步骤"></a>域名解析的具体步骤</h1><p>我参考的是”<a href="http://www.franktly.com/2016/01/09/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-2/" target="_blank" rel="external">Hexo同时部署在Coding和GitHub上并使用DNSPod分流</a>“，不做赘述。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;这篇文章的目的就是将coding.me上的和github.io的个人博客和自己注册的域名关联起来，并且实现国内的用户访问域名的时候定向到 c
    
    </summary>
    
    
      <category term="hexo" scheme="http://mdeng1985.github.io/tags/hexo/"/>
    
      <category term="coding.me" scheme="http://mdeng1985.github.io/tags/coding-me/"/>
    
      <category term="github pages" scheme="http://mdeng1985.github.io/tags/github-pages/"/>
    
      <category term="github.io" scheme="http://mdeng1985.github.io/tags/github-io/"/>
    
      <category term="域名解析" scheme="http://mdeng1985.github.io/tags/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo撰写博客教程</title>
    <link href="http://mdeng1985.github.io/2017/01/24/hexo-edit-blog/"/>
    <id>http://mdeng1985.github.io/2017/01/24/hexo-edit-blog/</id>
    <published>2017-01-24T16:50:51.000Z</published>
    <updated>2017-01-25T05:35:14.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>这篇文章的内容是利用Hexo撰写博客的相关内容，关于Hexo的配置和发布过程可以参见 <a href="/2017/01/23/installHexo/" title="用hexo创建博客并发布到github pages">用hexo创建博客并发布到github pages</a></p>
<h1 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h1><p>在命令行工具下进入到hexoBlog目录，运行：</p>
<p><code>hexo new &quot;arc1&quot;</code></p>
<p>这样在source/_posts目录下就新建了一个arc1.md博客文件，打开以后有固定的格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: myarc</div><div class="line">date: 2017-01-23 10:24:47</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure>
<p>其中title为博客的标题，tags为博客的标签，对于多个标签可以采用<code>tags:[tag1,tag2]</code>来实现。博客的撰写需要采用markdown语法，可以参见<a href="/2017/01/23/markdown_gram/" title="Markdown语法总结">Markdown语法总结</a>. 写完以后运行<code>hexo s -p 3600</code> 进行预览，没问题了再运行<code>hexo generate</code> <code>hexo deploy</code>发布到github pages</p>
<p>如果要添加私密文章或者草稿，则需要运行<code>hexo new **draft** &quot;arc1&quot;</code>, 这样在source/_drafts目录下新建了arc1.md，然后在本地可以强行预览草稿：<code>hexo server --drafts</code></p>
<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p>有两种典型的方式可以插入图片： -</p>
<ul>
<li><p><a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="external">hexo的官方方式</a>：这种方式需要将站点的配置文件_config.yml里设置：’post_asset_folder: true’, 然后在cmd输入: <code>hexo new &quot;post-test&quot;</code>, 这样 <code>source\_posts</code> 下建立post-test.md和post-test的文件夹。再把图片(比如：<code>example.jpg</code>)放到post-test这个文件夹里。post-test.md里进行调用的时候输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% asset_img example.jpg aaa %&#125;</div><div class="line">`</div></pre></td></tr></table></figure>
<p>但是，这种方法我没有试验成功。不知道怎么回事</p>
</li>
<li><p>基于Markdown语法的调用方式: <code>![](example.jpg的相对路径)</code>。但是如果’post_asset_folder: true’情况下，如果把exaple.jpg放在上一级目录中是无法显示的。参考下面的测试结果(首页能不能显示还和具体模板有关系)</p>
</li>
</ul>
<p><img src="/2017/01/24/hexo-edit-blog/compare_markdown_img.png" alt=""></p>
<p>总结下有两种比较靠谱的方式:</p>
<ul>
<li>_config_yml中设置’post_asset_folder: false’，然后将所有的图片放到_post的同级目录images下，然后进行调用<code>![](/images/example.jpg)</code></li>
<li>_config_yml中设置’post_asset_folder: true’, 这样建立aa.md的时候就同时新建了aa的文件夹，将图片放aa文件夹下，aa.md里调用的时候为<code>![](aa/compare_markdown_img.png)</code></li>
</ul>
<p>测试的时候犯了一个很低级的错误，就是我将图片命名为example.jpg.jpg, 导致一直预览不到。另外基于Markdown语法的图片可能会在首页和归档页看不到，不过对于我而言不是很重要。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;这篇文章的内容是利用Hexo撰写博客的相关内容，关于Hexo的配置和发布过程可以参见 &lt;a href=&quot;/2017/01/23/instal
    
    </summary>
    
      <category term="建站" scheme="http://mdeng1985.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="hexo" scheme="http://mdeng1985.github.io/tags/hexo/"/>
    
      <category term="git" scheme="http://mdeng1985.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>利用hexo将博客同时推送到coding pages和github pages</title>
    <link href="http://mdeng1985.github.io/2017/01/23/hexo_coding_github/"/>
    <id>http://mdeng1985.github.io/2017/01/23/hexo_coding_github/</id>
    <published>2017-01-23T15:58:24.000Z</published>
    <updated>2017-01-25T00:33:23.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在文章<a href="/2017/01/23/installHexo/" title="用hexo创建博客并发布到github pages">用hexo创建博客并发布到github pages</a>中给出了如何将hexo创建的博客推送到github，这篇文章在”<a href="/2017/01/23/installHexo/" title="用hexo创建博客并发布到github pages">用hexo创建博客并发布到github pages</a>“的基础上，将hexo创建的 博客同时发布到github pages和coding pages. 之所以这么做是有连个目的：一是为了分流，使得国内的用户访问coding pages，国外的用户访问github pages； 另外一个原因就是github pages貌似不能被百度收录，所以还要用coding pages。</p>
<h1 id="预备内容"><a href="#预备内容" class="headerlink" title="预备内容"></a>预备内容</h1><p>需要安装git软件，并生成公私匙，可以参考<a href="http://itfan.github.io/#show/2013-06-07-use-github-on-windows" target="_blank" rel="external">这篇文章</a>和<a href="https://coding.net/help/doc/git/ssh-key.html" target="_blank" rel="external">配置SSH公钥</a>。这里只需要用公钥<code>id_rsa.pub</code>文件</p>
<h1 id="在coding-net上创建仓库"><a href="#在coding-net上创建仓库" class="headerlink" title="在coding.net上创建仓库"></a>在coding.net上创建仓库</h1><p>coding.net和github类似，它的page也分为用户页和项目页两大类( <a href="https://coding.net/help/doc/pages/index.html" target="_blank" rel="external">Coding Pages 介绍</a>)。在coding上申请一个账户，假设用户名为zhangshan，创建一个仓库，名字为<code>zhangshan.coding.me</code> (这种格式对应的是用户页，如果需要创建项目页，则名字可以随意。但是我测试发现，<strong>如果创建项目页，博客预览的格式不理想，不知道怎么回事</strong>)</p>
<h1 id="配置coding上的公钥"><a href="#配置coding上的公钥" class="headerlink" title="配置coding上的公钥"></a>配置coding上的公钥</h1><p>配置的目的是在本地可以git直接将hexo博客推送到coding.net上。首先在<a href="https://coding.net/user" target="_blank" rel="external">用户主页</a>，将本地<code>id_rsa.pub</code>文件的内容配置到coding上。如下图所示 <img src="/2017/01/23/hexo_coding_github/ssh_key.png" alt=""></p>
<p>配置完以后，在本地的git bash(不是cmd里)进行验证</p>
<p><code>ssh -T git@git.coding.net</code></p>
<p>会提示”The authenticity of host ‘git.coding.net (220.243.237.72)’ can’t be established…”，这时候直接按回车，直到提示”You’ve connected to Coding.net via SSH successfully!”, 就说明配置成功。</p>
<h1 id="在hexo里配置coding的推送地址"><a href="#在hexo里配置coding的推送地址" class="headerlink" title="在hexo里配置coding的推送地址"></a>在hexo里配置coding的推送地址</h1><p>在hexo的站点目录下(我的为hexoBlog)打开_config.yml，将coding.net的git地址放进去，如下所示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository:</div><div class="line">    github: git@github.com:zhangshan/zhangshan.github.io.git</div><div class="line">    coding: git@git.coding.net:zhangshan/zhangshan.coding.me.git</div><div class="line">  branch: master</div><div class="line">  message: hexo deploy</div></pre></td></tr></table></figure>
<h1 id="进行推送"><a href="#进行推送" class="headerlink" title="进行推送"></a>进行推送</h1><p>和github pages的推送方式一样，不做赘述, 可以参考(<a href="/2017/01/23/installHexo/" title="用hexo创建博客并发布到github pages">用hexo创建博客并发布到github pages</a>)</p>
<h1 id="coding-的pages设置"><a href="#coding-的pages设置" class="headerlink" title="coding 的pages设置"></a>coding 的pages设置</h1><p>在coding.net进入到自己的zhangshan.coding.me点pages服务，然后”部署来源”为master分支，就可以在浏览器中输入<code>http://zhangshan.coding.me/zhangshan.coding.me</code>中浏览博客。</p>
<p>至此已经完成了hexo博客同时推送到coding pages和github pages的任务。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在文章&lt;a href=&quot;/2017/01/23/installHexo/&quot; title=&quot;用hexo创建博客并发布到github pages
    
    </summary>
    
      <category term="建站" scheme="http://mdeng1985.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="hexo" scheme="http://mdeng1985.github.io/tags/hexo/"/>
    
      <category term="git" scheme="http://mdeng1985.github.io/tags/git/"/>
    
      <category term="github pages" scheme="http://mdeng1985.github.io/tags/github-pages/"/>
    
      <category term="coding pages" scheme="http://mdeng1985.github.io/tags/coding-pages/"/>
    
  </entry>
  
  <entry>
    <title>用hexo创建博客并发布到github pages</title>
    <link href="http://mdeng1985.github.io/2017/01/23/installHexo/"/>
    <id>http://mdeng1985.github.io/2017/01/23/installHexo/</id>
    <published>2017-01-23T15:58:24.000Z</published>
    <updated>2017-01-25T03:12:00.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装和配置hexo"><a href="#安装和配置hexo" class="headerlink" title="安装和配置hexo"></a>安装和配置hexo</h1><p>首先需要安装node.js和git, 然后在命令行下安装hexo:<br><br><code>npm install -g hexo</code></p>
<p>命令行进入到blog的上一级目录(比如说D://hexoRoot),创建一个hexo项目</p>
<p><code>hexo init hexoblog</code></p>
<p>这样，在hexoRoot目录下就创建了个hexoblog文件夹，进入到hexoBlog文件夹运行</p>
<p><code>hexo server</code></p>
<p>然后在浏览器窗口输入 <code>http://localhost:4000/</code>，就可以预览博客。</p>
<p>如果看不到，换一个端口试试，比如：<br><br><code>hexo s -p 3600</code><br><br>然后在浏览器窗口输入：</p>
<p><code>http://localhost:3600/</code><br></p>
<p>进行预览 最后安装插件（在命令行工具下,先进入到hexoBlog目录中执行下述命令）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked@0.2 --save</div><div class="line">npm install hexo-renderer-stylus@0.2 --save</div><div class="line">npm install hexo-generator-feed@1 --save</div><div class="line">npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure>
<h1 id="发布hexo博客到github-pages"><a href="#发布hexo博客到github-pages" class="headerlink" title="发布hexo博客到github pages"></a>发布hexo博客到github pages</h1><ul>
<li><strong>github建立远程仓库</strong></li>
</ul>
<p>首先需要在github上建一个仓库名为username.github.io（username对应自己的github用户名，这里假设为zhangshan; github.io是则说明建的是个人用户页，不是项目页，两者区别参见：<a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="external">User, Organization, and Project Pages</a>）.这个项目的网址为(可在项目里查看):</p>
<blockquote>
<p><code>zhangshan/zhangshan.github.io.git</code></p>
</blockquote>
<ul>
<li><strong>本地配置远程的git仓库</strong></li>
</ul>
<p>在本地进入到新建的hexoBlog文件夹里，配置_config.yml文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repository: git@github.com:zhangshan/zhangshan.github.io.git</div><div class="line">branch: master</div></pre></td></tr></table></figure>
<p>然后执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<ul>
<li><strong>浏览器窗口查看</strong></li>
</ul>
<p>输入<code>https://zhangshan.github.io/</code>就可以看到博客效果</p>
<h1 id="hexo博客的优化与美化"><a href="#hexo博客的优化与美化" class="headerlink" title="hexo博客的优化与美化"></a>hexo博客的优化与美化</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>安装主题的主要流程：将主题包下载下来，放到themes文件夹下，然后在_config.yml里进行配置， 以<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a>主题为例进行说明：</p>
<ul>
<li><p>在hexoBlog目录下进行git克隆</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p>这样主题就自动下载到next文件夹了(也可以手动下载主题，然后解压缩)</p>
</li>
<li><p>修改hexoBlog目录下的_config.yml文件：<code>theme: next</code></p>
</li>
<li><p>如果要修改next主题的一些配置，则需要修改next文件夹下的_config_yml文件。</p>
</li>
</ul>
<p>我比较喜欢的两个主题有</p>
<ul>
<li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a></li>
<li><a href="https://github.com/wuchong/jacman" target="_blank" rel="external">jacman</a></li>
</ul>
<h2 id="添加多说分享和评论功能"><a href="#添加多说分享和评论功能" class="headerlink" title="添加多说分享和评论功能"></a>添加多说分享和评论功能</h2><p>开始以为添加百度分享分享到微博、微信等，但是发现next主题的百度分享不支持https的站点，就使用多说分享了。首先去<a href="duoshuo.com">多说</a>用微信或者 qq登陆，设置shortname, 然后在站点的_config.yml（注意不是主题下的_config.yml）添加两行（第一行设置评论，第二行设置分享）</p>
<blockquote>
<p><code>duoshuo_shortname:自己设置的shortname</code><br><br><code>duoshuo_share: true</code></p>
</blockquote>
<p>具体设置参见<a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="external">next主题的说明文档</a>。如果还是不行的话，可能和其他插件冲突，比如 disqus，检查下主题下的_config.yml和站点下的_config.yml。</p>
<h2 id="添加版权申明"><a href="#添加版权申明" class="headerlink" title="添加版权申明"></a>添加版权申明</h2><p>参考”<a href="http://ixiusama.com/2016/02/15/%E4%B8%BA%20Next%20%E4%B8%BB%E9%A2%98%E6%96%87%E6%9C%AB%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9D%83%E7%AD%89%E4%BF%A1%E6%81%AF/" target="_blank" rel="external">为 Next 主题文末添加版权等信息</a>“，只不过我的是在next\layout_macro的post.swig的<code>{\% endmacro \%}</code>那行前面加上如下的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;page-footer&quot;&gt;</div><div class="line">    &#123;% if not is_index %&#125;</div><div class="line">      &lt;div id=&quot;eof&quot; class=&quot;print-invisible&quot;&gt;</div><div class="line">        &lt;hr class=&quot;eof&quot;&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line"></div><div class="line">      &lt;div class=&quot;copyright&quot; style=&quot;clear:both;&quot;&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot; title=&quot;Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)&quot;&gt;Attribution-NonCommercial 4.0&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;转载请保留以上信息。&lt;/span&gt;&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if not is_index and (post.prev or post.next) %&#125;</div><div class="line">      &lt;div class=&quot;post-nav&quot;&gt;</div><div class="line">        &lt;div class=&quot;post-nav-prev post-nav-item&quot;&gt;</div><div class="line">          &#123;% if post.prev %&#125;</div><div class="line">            &lt;a href=&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot;&gt;&#123;&#123;post.prev.title&#125;&#125;&lt;/a&gt;</div><div class="line">          &#123;% endif %&#125;</div><div class="line">        &lt;/div&gt;</div><div class="line"></div><div class="line">        &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt;</div><div class="line">          &#123;% if post.next %&#125;</div><div class="line">            &lt;a href=&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot;&gt;&#123;&#123;post.next.title&#125;&#125;&lt;/a&gt;</div><div class="line">          &#123;% endif %&#125;</div><div class="line">        &lt;/div&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">  &lt;/div&gt;</div></pre></td></tr></table></figure>
<h2 id="站点的menu的链接失效都指向主页的解决方案"><a href="#站点的menu的链接失效都指向主页的解决方案" class="headerlink" title="站点的menu的链接失效都指向主页的解决方案"></a>站点的menu的链接失效都指向主页的解决方案</h2><p>站点的_config.yml里的必须为<code>relative_link: false</code> , 否则menu的那些链接都会失效。</p>
<h2 id="git无法添加themes-next的解决方案"><a href="#git无法添加themes-next的解决方案" class="headerlink" title="git无法添加themes/next的解决方案"></a>git无法添加themes/next的解决方案</h2><p>在站点根目录(我的为hexoBlog)下，新建git仓库，发觉无法添加”themes/next”下的文件，会提示</p>
<p>fatal: Pathspec ‘themes/next/_config.yml’ is in submodule</p>
<p>这时候因为在next下有个submodule，需要先进入到这个目录运行更新子模块，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd themes/next</div><div class="line">git --git-dir=.git --work-tree=. add .</div><div class="line">git --git-dir=.git --work-tree=. commit -m &quot;update next theme&quot;</div></pre></td></tr></table></figure>
<p>然后返回到站点根目录，添加，具体如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd ..</div><div class="line">cd ..</div><div class="line">git add themes/next</div><div class="line">git commit -m &quot;update blog&quot;</div></pre></td></tr></table></figure>
<p>详见:<a href="http://stackoverflow.com/questions/24472596/git-fatal-pathspec-is-in-submodule" target="_blank" rel="external">Git: fatal: Pathspec is in submodule</a></p>
<h2 id="添加到搜索引擎"><a href="#添加到搜索引擎" class="headerlink" title="添加到搜索引擎"></a>添加到搜索引擎</h2><p>参考<a href="http://svend.cc/posts/22980/" target="_blank" rel="external">Hexo博客提交百度和Google收录</a>，站点能够被google站点工具验证成功，一定要记得将验证文件放到主题下的source文件夹下（themes\next\source），而不是博客的source文件夹(hexoBlog\source)下，否则验证不成功。</p>
<p><a href="http://zhanzhang.baidu.com/" target="_blank" rel="external">百度站长网站</a></p>
<h2 id="设置首页只显示预览，不显示全文"><a href="#设置首页只显示预览，不显示全文" class="headerlink" title="设置首页只显示预览，不显示全文"></a>设置首页只显示预览，不显示全文</h2><p>设置主题下的_config.yml, 搜索<code>auto_excerpt</code>,将enable改成true。</p>
<h1 id="使用过程中的FAQ"><a href="#使用过程中的FAQ" class="headerlink" title="使用过程中的FAQ"></a>使用过程中的FAQ</h1><ul>
<li><p>引用自己博客里的其他文章：A引用Bfg.md，则在A的md文件里输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% post_link Bfg %&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5" target="_blank" rel="external">在博客里添加自己的社交链接</a></p>
</li>
<li><p><a href="http://colin1994.github.io/2016/06/02/hexo-copyright-and-donate/" target="_blank" rel="external">添加版权申明</a></p>
</li>
</ul>
<h1 id="我进行的相关配置总结"><a href="#我进行的相关配置总结" class="headerlink" title="我进行的相关配置总结"></a>我进行的相关配置总结</h1><ul>
<li>本地博客根目录下hexoBlog配置远程仓库的网址(修改站点配置文件_config.yml，参见前文)</li>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA-%22%E5%85%B3%E4%BA%8E%E6%88%91%22-%E9%A1%B5%E9%9D%A2" target="_blank" rel="external">创建”关于我”的页面</a></li>
<li><p>和主题有关的设置(我用的是next主题)</p>
<ul>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2" target="_blank" rel="external">创建分类页面</a>，创建完以后怎么对博客分类可以参考<a href="http://ijiaober.github.io/2014/08/05/hexo/hexo-04/" target="_blank" rel="external">Hexo的分类和标签设置</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA-%22%E5%85%B3%E4%BA%8E%E6%88%91%22-%E9%A1%B5%E9%9D%A2" target="_blank" rel="external">创建关于我的页面</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%A4%B4%E5%83%8F" target="_blank" rel="external">设置侧边栏头像</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%80" target="_blank" rel="external">设置语言</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5" target="_blank" rel="external">添加社交链接</a></li>
<li>设置多说分享和多说评论，参见前文。</li>
<li><a href="https://qiutc.me/post/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="external">添加版权协议</a></li>
<li>添加版权申明,参见前文。</li>
<li><a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi" target="_blank" rel="external">添加不蒜子统计</a></li>
<li><a href="http://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="external">添加local search</a></li>
<li><a href="http://theme-next.iissnan.com/third-party-services.html#mathjax-new-settings" target="_blank" rel="external">添加MathJax</a></li>
<li><a href="http://www.cylong.com/blog/2016/04/25/hexo-next-duoshuo/" target="_blank" rel="external">添加最新访客功能</a></li>
<li>添加到搜索引擎，参见前文</li>
<li><a href="http://theme-next.iissnan.com/third-party-services.html#analytics-baidu" target="_blank" rel="external">添加百度统计</a></li>
<li><a href="http://www.jianshu.com/p/393d067dba8d" target="_blank" rel="external">首页仅不显示全文只显示预览</a></li>
</ul>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1></li>
<li><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo帮助文档</a></p>
</li>
<li><p><a href="https://qiutc.me/post/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="external">使用hexo-github搭建静态博客：对配置文件里的每项参数做出了说明</a></p>
</li>
<li><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">next theme的说明文档</a></p>
</li>
<li><p><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/content/hexo-tutor-7.html" target="_blank" rel="external">Markdown 简单的世界</a></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装和配置hexo&quot;&gt;&lt;a href=&quot;#安装和配置hexo&quot; class=&quot;headerlink&quot; title=&quot;安装和配置hexo&quot;&gt;&lt;/a&gt;安装和配置hexo&lt;/h1&gt;&lt;p&gt;首先需要安装node.js和git, 然后在命令行下安装hexo:&lt;br&gt;&lt;br&gt;&lt;
    
    </summary>
    
      <category term="建站" scheme="http://mdeng1985.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="hexo" scheme="http://mdeng1985.github.io/tags/hexo/"/>
    
      <category term="git" scheme="http://mdeng1985.github.io/tags/git/"/>
    
      <category term="github pages" scheme="http://mdeng1985.github.io/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法总结</title>
    <link href="http://mdeng1985.github.io/2017/01/23/markdown_gram/"/>
    <id>http://mdeng1985.github.io/2017/01/23/markdown_gram/</id>
    <published>2017-01-23T15:58:24.000Z</published>
    <updated>2017-01-23T23:10:06.285Z</updated>
    
    <content type="html"><![CDATA[<p>@: [gitbookLearnBook, markdown_grammer] <!-- gitbookLearnBook 为本地的书籍的标题 --> <!-- markdown_grammer为本地的.md名字 --></p>
<h1 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h1><blockquote>
<p><code>#</code> 为一级标题<br><br><code>##</code> 为二级标题，以此类推</p>
</blockquote>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><blockquote>
<p><code>**粗体**</code> <strong>粗体</strong></p>
<p><code>*斜体*</code> <em>斜体</em></p>
<p><code>~~删除线~~</code> <del>删除线</del></p>
</blockquote>
<h1 id="字符块引用"><a href="#字符块引用" class="headerlink" title="字符块引用"></a>字符块引用</h1><p><code>&gt;</code> 你好</p>
<blockquote>
<p>你好</p>
</blockquote>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>行内代码用两个反引号(标准键盘的ESC下的那个键)引着, 比如<code>A=1</code></p>
<p>大块的代码用前后3个反引号引着，比如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a=1</div><div class="line">b=2</div></pre></td></tr></table></figure>
<p>也可以是每行代码前加4个空格(tab键)来实现</p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p><strong>无序列表</strong> <code>*</code>列表1 <code>*</code>列表2 <code>*</code>列表2的子列表(+号或者-号也可以)</p>
<blockquote>
<ul>
<li>列表1</li>
<li><p>列表2</p>
<ul>
<li>列表2的子列表</li>
</ul>
</li>
</ul>
</blockquote>
<p><strong>有序列表</strong>：前面加具体的数字和顿号即可</p>
<p><strong>任务列表</strong></p>
<p>使用 <code>- [ ]</code> 和 <code>- [x]</code></p>
<ul>
<li>[x] 已完成事项</li>
<li>[ ] 待办事项</li>
</ul>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p><strong>链接http网址</strong>： <code>[bbc](https://bbc.com)</code></p>
<blockquote>
<p><a href="https://bbc.com" target="_blank" rel="external">bbc</a></p>
</blockquote>
<p><strong>链接本地文件</strong>： <code>[for this project](docs/CONTRIBUTING.md)</code></p>
<p>则链接的是当前.md所在的目录的docs文件下的CONTRIBUTING.md文件。</p>
<p><code>[for this project](../CONTRIBUTING.md)</code></p>
<p>则链接的是当前.md所在的目录的上一级目录的CONTRIBUTING.md文件。</p>
<p><strong>交叉引用</strong></p>
<p>在B段落处引用的时候引用A段落的内容。首先在A的标题新建标签</p>
<p><code>A的标题{\#tagA}</code></p>
<p>然后在B处输入：</p>
<p><code>[&quot;参见A&quot;](\#tagA)</code></p>
<h1 id="插入图片和表格"><a href="#插入图片和表格" class="headerlink" title="插入图片和表格"></a>插入图片和表格</h1><p><strong>插入图片</strong> <code>![github logo](/images/logo.png)</code></p>
<p>插入的logo.png位于当前的.md文件的目录的images文件夹下</p>
<p><strong>插入表格</strong></p>
<p>表格的列于列之间用|隔开，第一行与第二行之间用—–隔开，比如</p>
<p><code>| aa | bb | |:---|:---| | dd | ee |</code>| aa | bb | |:—|:—| | dd | ee | e</p>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>插入三个<code>***</code>即可.</p>
<h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><p>反斜杠\ 比如，由于#号在markdown语法里代表标题，如果要输入#号，则可以在前面加个反斜杠。</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol>
<li>输出空格：Markdown不识别半角空格，当需要空格时，按shift+Space,然后再按空格键即可.</li>
<li>两个空格强制换行</li>
<li>添加备注 <code>&lt;!-- 备注 --&gt;</code> <!-- This text will not appear in the browser window. --></li>
</ol>
<h1 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h1><h1 id="流程图-和-时序图"><a href="#流程图-和-时序图" class="headerlink" title="流程图 和 时序图"></a>流程图 和 时序图</h1><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol>
<li><a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/" target="_blank" rel="external">Basic writing and formatting syntax</a></li>
<li><a href="http://www.markdowntutorial.com/" target="_blank" rel="external">Markdown Tutorial</a></li>
<li><a href="http://col.dog/2015/11/22/Markdown-Syntax/" target="_blank" rel="external">Markdown 语法基础及使用教程</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@: [gitbookLearnBook, markdown_grammer] &lt;!-- gitbookLearnBook 为本地的书籍的标题 --&gt; &lt;!-- markdown_grammer为本地的.md名字 --&gt;&lt;/p&gt;
&lt;h1 id=&quot;分级标题&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="建站" scheme="http://mdeng1985.github.io/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="github pages" scheme="http://mdeng1985.github.io/tags/github-pages/"/>
    
      <category term="markdown" scheme="http://mdeng1985.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://mdeng1985.github.io/2017/01/23/hello-world/"/>
    <id>http://mdeng1985.github.io/2017/01/23/hello-world/</id>
    <published>2017-01-23T14:17:42.100Z</published>
    <updated>2017-01-24T01:06:41.924Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<p>$$a=3^2+\sqrt(3)$$</p>
<h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h2 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h2 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h2 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h2 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
